{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport Employee from \"../components/models/Employee\"; // step 3 for redux - create slices for each components \n\nconst EmpSlice = createSlice({\n  name: 'emp',\n  initialState: {\n    // empState: {\n    //     eid: 101,\n    //     firstName: 'Sonu',\n    //     salary: 10.5\n    // }\n    empState: new Employee(),\n    empList: []\n  },\n  reducers: {\n    getEmpById: (state, action) => {\n      console.log('EmpSlice reducers getEmpById');\n      state.empState = action.payload;\n    },\n    getAllEmps: (state, action) => {\n      console.log('EmpSlice reducers getAllEmps');\n      state.empList = action.payload;\n    } // more methods will be added \n\n  }\n});\nexport const {\n  getEmpById,\n  getAllEmps\n} = EmpSlice.actions;\nexport default EmpSlice.reducer;","map":{"version":3,"sources":["C:/CapGWorkspace/bus-reservation-ui/src/redux/EmpSlice.js"],"names":["createSlice","Employee","EmpSlice","name","initialState","empState","empList","reducers","getEmpById","state","action","console","log","payload","getAllEmps","actions","reducer"],"mappings":"AACA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,QAAP,MAAqB,+BAArB,C,CAEA;;AACA,MAAMC,QAAQ,GAAGF,WAAW,CAAC;AAEzBG,EAAAA,IAAI,EAAE,KAFmB;AAIzBC,EAAAA,YAAY,EAAE;AACV;AACA;AACA;AACA;AACA;AAEAC,IAAAA,QAAQ,EAAE,IAAIJ,QAAJ,EAPA;AAQVK,IAAAA,OAAO,EAAE;AARC,GAJW;AAiBzBC,EAAAA,QAAQ,EAAE;AAENC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAH,MAAAA,KAAK,CAACJ,QAAN,GAAiBK,MAAM,CAACG,OAAxB;AACH,KALK;AAONC,IAAAA,UAAU,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAH,MAAAA,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACG,OAAvB;AACH,KAVK,CAYN;;AAZM;AAjBe,CAAD,CAA5B;AAiCA,OAAO,MAAM;AAAEL,EAAAA,UAAF;AAAcM,EAAAA;AAAd,IAA6BZ,QAAQ,CAACa,OAA5C;AAEP,eAAeb,QAAQ,CAACc,OAAxB","sourcesContent":["\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport Employee from \"../components/models/Employee\";\n\n// step 3 for redux - create slices for each components \nconst EmpSlice = createSlice({\n\n    name: 'emp',\n\n    initialState: {\n        // empState: {\n        //     eid: 101,\n        //     firstName: 'Sonu',\n        //     salary: 10.5\n        // }\n\n        empState: new Employee(),\n        empList: []\n\n\n    },\n\n    reducers: {\n\n        getEmpById: (state, action) => {\n            console.log('EmpSlice reducers getEmpById');\n            state.empState = action.payload;\n        },\n\n        getAllEmps: (state, action) => {\n            console.log('EmpSlice reducers getAllEmps');\n            state.empList = action.payload;\n        }\n\n        // more methods will be added \n    }\n});\n\nexport const { getEmpById, getAllEmps } = EmpSlice.actions;\n\nexport default EmpSlice.reducer;"]},"metadata":{},"sourceType":"module"}