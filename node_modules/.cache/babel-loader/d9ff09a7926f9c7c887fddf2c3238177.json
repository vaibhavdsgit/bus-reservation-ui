{"ast":null,"code":"import empReducer from './EmpSlice';\nimport depReducer from './DepSlice';\nimport busReducer from './BusSlice';\nimport reservationReducer from './ReservationSlice';\nimport adminReducer from ''; // steps - \n// 1. create store - only one \n// 2. provide the store to index.js \n// 3. create slices for components (one for each)\n// 4. use slices in components \n\nimport { configureStore } from \"@reduxjs/toolkit\"; // note - redux store can be created in multiple different ways. \n// latest way \n// step 1 for redux \n\nconsole.log('store');\nconst store = configureStore({\n  reducer: {\n    emp: empReducer,\n    dep: depReducer,\n    bus: busReducer,\n    reservation: reservationReducer,\n    admin: adminReducer // ,\n    // anotherComponent: anotherComponentReducer\n\n  }\n});\nexport default store;","map":{"version":3,"sources":["C:/CapGWorkspace/bus-reservation-ui/src/redux/store.js"],"names":["empReducer","depReducer","busReducer","reservationReducer","adminReducer","configureStore","console","log","store","reducer","emp","dep","bus","reservation","admin"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,kBAAP,MAA+B,oBAA/B;AACA,OAAOC,YAAP,MAAyB,EAAzB,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,SAASC,cAAT,QAA+B,kBAA/B,C,CAEA;AACA;AAEA;;AACAC,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,MAAMC,KAAK,GAAGH,cAAc,CACxB;AACII,EAAAA,OAAO,EAAE;AACLC,IAAAA,GAAG,EAAEV,UADA;AAELW,IAAAA,GAAG,EAAEV,UAFA;AAGLW,IAAAA,GAAG,EAAEV,UAHA;AAILW,IAAAA,WAAW,EAAEV,kBAJR;AAKLW,IAAAA,KAAK,EAAEV,YALF,CAML;AACA;;AAPK;AADb,CADwB,CAA5B;AAcA,eAAeI,KAAf","sourcesContent":["import empReducer from './EmpSlice';\nimport depReducer from './DepSlice';\nimport busReducer from './BusSlice';\nimport reservationReducer from './ReservationSlice';\nimport adminReducer from ''\n\n// steps - \n// 1. create store - only one \n// 2. provide the store to index.js \n// 3. create slices for components (one for each)\n// 4. use slices in components \n\nimport { configureStore } from \"@reduxjs/toolkit\";\n\n// note - redux store can be created in multiple different ways. \n// latest way \n\n// step 1 for redux \nconsole.log('store');\nconst store = configureStore(\n    {\n        reducer: {\n            emp: empReducer,\n            dep: depReducer,\n            bus: busReducer,\n            reservation: reservationReducer,\n            admin: adminReducer\n            // ,\n            // anotherComponent: anotherComponentReducer\n        }\n    }\n);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}